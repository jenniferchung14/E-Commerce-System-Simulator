/**
 * Programmer: Jennifer Chung
 * Student ID: 501096156
 * Course Code: CPS 209-061
 * Due Date: 14/04/22
 */

/*
 * class ProductOrder defines an order of a specific product by a customer
 * 
 * The order number is generated by the system when a ProductOrder object is created.
 * 
 * Also stores any product options chosen by this customer (e.g. paperback book, certain size of a product etc)
 */
public class ProductOrder
{
	private String 	orderNumber;
	private Product product;
	private String  productOptions;
	private Customer customer;
	
	/** Main constructor that creates an order with the specified order number, product, customer and product options.
	* 
	* @param orderNumber - is the order number of the order in a string.
	* @param product - is the product of the roder.
	* @param customer - is the customer of the order.
	* @param productOptions - is the product options of the product that is ordered.
	*/
	public ProductOrder(String orderNumber, Product product, Customer customer, String productOptions)
	{
		this.orderNumber = orderNumber;
		this.product = product;
		this.customer = customer;
		this.productOptions = productOptions;
	}

	/** Gets the order number of the order.
	* @return the order number of the order as a string.
	*/
	public String getOrderNumber()
	{
		return orderNumber;
	}
	
	/*
	 * Set the order number for this order.
	 */
	public void setOrderNumber(String orderNumber)
	{
		this.orderNumber = orderNumber;
	}

	/** Gets the product of the order.
	* @return the product of the order.
	*/
	public Product getProduct()
	{
		return product;
	}

	/*
	 * Set the product for this order.
	 */
	public void setProduct(Product product)
	{
		this.product = product;
	}

	/** Gets the customer of the order.
	* @return the customer of the order.
	*/
	public Customer getCustomer()
	{
		return customer;
	}

	/*
	 * Set the customer for the order.
	 */
	public void setCustomer(Customer customer)
	{
		this.customer = customer;
	}
	
	/* 
	* Gives a string representation of the product order object.
	* Prints the order number, customer id, product id, product name and product options of the order as a formatted string.
	*/
	public void print()
	{
		System.out.printf("\nOrder # %3s Customer Id: %3s Product Id: %3s Product Name: %12s Options: %8s", orderNumber, customer.getId(), product.getId(), product.getName(), 
				            productOptions);
	}

	/*
	 * Two ProductOrder objects are equal if they have the same order number string.
	 */
	public boolean equals(Object other)
	{
		// Compare two ProductOrder objects based on their orderNumber strings
		// Replace the line below (Hint: look at class Product equals())
		ProductOrder otherOrder = (ProductOrder) other;
		return this.orderNumber.equals(otherOrder.orderNumber);
	}
}
